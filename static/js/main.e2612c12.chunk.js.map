{"version":3,"sources":["LinkedList/LinkedListNode.js","LinkedList/LinkedListImp.js","LinkedList/SingleLinkedList.js","Home/index.js","AppMenu/AppMenu.js","App.js","index.js"],"names":["LinkedListNode","data","this","next","LinkedList","size","head","isEmpty","console","log","temp","print","push","getNext","join","node","setNext","pre","cur","oldSize","Error","SingleLinkedList","props","setPrintList","list","state","printList","unshift","ll","setState","handleClose","event","reason","snackOpen","errorMessage","handleChange","target","value","append","trim","textInput","current","focus","deleteNode","delete","deleteAllOccurances","deleteAll","e","message","reverse","printLL","iscurrentList","listIndex","length","className","key","map","index","IconButton","aria-label","onClick","style","color","fontSize","textTransform","React","createRef","setHeader","TextField","id","label","type","InputLabelProps","shrink","autoFocus","innerRef","variant","onChange","Grid","container","item","xs","Button","width","marginBottom","endIcon","Divider","Typography","display","gutterBottom","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","Component","Home","useEffect","align","useStyles","makeStyles","theme","root","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","menuList","name","link","AppMenu","classes","useTheme","useState","setOpen","titleHeader","setTitleHeader","CssBaseline","AppBar","position","clsx","Toolbar","edge","noWrap","Drawer","anchor","paper","direction","List","ListItem","button","ListItemIcon","to","ListItemText","primary","exact","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2612c12.chunk.js","sourcesContent":["export default class LinkedListNode {\n  constructor(data) {\n    this.data = data;\n    this.next = null;\n  }\n\n  getNext() {\n    return this.next;\n  }\n\n  setNext(next) {\n    this.next = next;\n  }\n\n  getData() {\n    return this.data;\n  }\n}\n","import LinkedListNode from \"./LinkedListNode\";\n\nexport default class LinkedList {\n  constructor() {\n    this.size = 0;\n    this.head = null;\n  }\n\n  isEmpty() {\n    return this.head == null;\n  }\n\n  print() {\n    if (this.isEmpty()) {\n      console.log(\"Nothing to print\");\n      return [];\n    } else {\n      let temp = this.head;\n      let print = [];\n      while (temp) {\n        print.push(temp.data);\n        temp = temp.getNext();\n      }\n      console.log(`${print.join(\" -> \")} -> NULL`);\n      return print;\n    }\n  }\n\n  append(data) {\n    let node = new LinkedListNode(data);\n    if (this.isEmpty()) {\n      this.head = node;\n      this.size++;\n      return;\n    } else {\n      let temp = this.head;\n      while (temp.getNext()) {\n        temp = temp.getNext();\n      }\n      temp.setNext(node);\n      this.size++;\n    }\n  }\n\n  delete(data) {\n    if (this.isEmpty()) {\n      console.log(\"Nothing to delete.\");\n      return;\n    } else if (this.head.data == data) {\n      let temp = this.head;\n      this.head = this.head.getNext();\n      temp.setNext(null);\n      this.size--;\n      return;\n    } else {\n      let pre = this.head;\n      let cur = this.head.getNext();\n      while (cur != null) {\n        if (cur.data == data) {\n          pre.setNext(cur.getNext());\n          cur.setNext(null);\n          this.size--;\n          return;\n        } else {\n          pre = cur;\n          cur = cur.getNext();\n        }\n      }\n    }\n    console.log(`Iten ${data} not found in Linked List.`);\n  }\n\n  deleteAll(data) {\n    if (this.isEmpty()) {\n      console.log(\"Nothing to delete.\");\n      return;\n    } else {\n      let pre = null;\n      let cur = this.head;\n      let oldSize = this.size;\n      while (cur != null) {\n        if (cur.data == data) {\n          if (cur == this.head) {\n            this.head = this.head.getNext();\n            cur.setNext(null);\n            cur = this.head;\n            this.size--;\n          } else {\n            pre.setNext(cur.getNext());\n            cur.setNext(null);\n            cur = pre.getNext();\n            this.size--;\n          }\n        } else {\n          pre = cur;\n          cur = cur.getNext();\n        }\n      }\n      if (oldSize == this.size) {\n        throw new Error(\"Data Not found\");\n      }\n    }\n  }\n\n  reverse() {\n    if (this.isEmpty()) {\n      console.log(\"Nothing to reverse.\");\n      throw new Error(\"Nothing to reverse\");\n    } else {\n      let pre = null;\n      let cur = this.head;\n      while (cur != null) {\n        let temp = cur.getNext();\n        cur.setNext(pre);\n        pre = cur;\n        cur = temp;\n      }\n      this.head = pre;\n    }\n  }\n}\n","import React from \"react\";\nimport LinkedList from \"./LinkedListImp\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport SendSharpIcon from \"@material-ui/icons/SendSharp\";\nimport SwapHorizontalCircleSharpIcon from \"@material-ui/icons/SwapHorizontalCircleSharp\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"./LinkedListStyles.scss\";\n\nconst redColor = \"#f44336\";\n\nclass SingleLinkedList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ll: new LinkedList(),\n      printList: [],\n      data: \"\",\n      snackOpen: false,\n    };\n    this.textInput = React.createRef();\n  }\n\n  componentWillMount() {\n    this.props.setHeader(\"Linked List\");\n  }\n\n  componentDidMount() {\n    this.setPrintList();\n    this.textInput.current.focus();\n  }\n\n  setPrintList = () => {\n    let list = this.state.printList || [];\n    list.unshift(this.state.ll.print());\n    this.setState({ printList: list });\n  };\n\n  handleClose = (event, reason) => {\n    this.setState({\n      snackOpen: false,\n      errorMessage: \"\",\n    });\n  };\n\n  handleChange = (event) => {\n    this.setState({ data: event.target.value });\n  };\n  append = () => {\n    if (this.state.data.trim()) {\n      this.state.ll.append(this.state.data.trim());\n      this.setPrintList();\n      this.textInput.current.focus();\n      this.setState({\n        data: \"\",\n      });\n    } else {\n      this.setState({\n        snackOpen: true,\n        errorMessage: \"Empty data cannot be appended.\",\n      });\n    }\n  };\n\n  deleteNode = (data) => {\n    this.state.ll.delete(data);\n    this.setPrintList();\n  };\n\n  deleteAllOccurances = (data) => {\n    try {\n      this.state.ll.deleteAll(data);\n      this.setPrintList();\n    } catch (e) {\n      this.setState({\n        snackOpen: true,\n        errorMessage: e.message,\n      });\n    }\n  };\n\n  reverse = () => {\n    try {\n      this.state.ll.reverse();\n      this.setPrintList();\n    } catch (e) {\n      this.setState({\n        snackOpen: true,\n        errorMessage: e.message,\n      });\n    }\n  };\n\n  printLL = (list = [], iscurrentList, listIndex) => {\n    if (list.length) {\n      return (\n        <div className=\"linked-list\" key={`print-ll-${listIndex}`}>\n          {list.map((node, index) => {\n            let className = `list-node`;\n            if (iscurrentList) {\n              className = `${className} current-list-node`;\n              return (\n                <div className={className} key={`list-node-${index}`}>\n                  {node}\n                  <div className=\"next-tracker\">\n                    <div className=\"arrow\">\n                      <div className=\"line\"></div>\n                      <div className=\"point\"></div>\n                    </div>\n                  </div>\n                  <div className=\"options\">\n                    <div className=\"delete\">\n                      <IconButton\n                        aria-label={node}\n                        onClick={() => this.deleteNode(node)}\n                        style={{ color: redColor }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </div>\n                    <div className=\"delete\">\n                      <IconButton\n                        aria-label={node}\n                        onClick={() => this.deleteAllOccurances(node)}\n                        style={{ color: redColor }}\n                      >\n                        <DeleteForeverIcon />\n                      </IconButton>\n                    </div>\n                  </div>\n                </div>\n              );\n            } else {\n              return (\n                <div className={className} key={`list-node-${index}`}>\n                  {node}\n                  <div className=\"next-tracker\">\n                    <div className=\"arrow\">\n                      <div className=\"line\"></div>\n                      <div className=\"point\"></div>\n                    </div>\n                  </div>\n                </div>\n              );\n            }\n          })}\n        </div>\n      );\n    } else {\n      return (\n        <p\n          key={`print-ll-${listIndex}`}\n          style={{\n            fontSize: \"14px\",\n            textTransform: \"uppercase\",\n            color: redColor,\n          }}\n        >\n          <strong>NULL</strong>\n        </p>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"linked-list-wrapper\">\n        <div className=\"list-wrapper\">\n          <div className=\"linked-list-action\">\n            <div className=\"linked-list-block\">\n              <TextField\n                id=\"outlined-number\"\n                label=\"NEW DATA\"\n                type=\"number\"\n                className=\"list-textfield\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                autoFocus={true}\n                innerRef={this.textInput}\n                variant=\"outlined\"\n                onChange={this.handleChange}\n                value={this.state.data}\n              />\n              <Grid container>\n                <Grid item xs={12}>\n                  <Button\n                    variant=\"outlined\"\n                    size=\"large\"\n                    color=\"primary\"\n                    onClick={this.append}\n                    style={{ width: \"100%\", marginBottom: \"10px\" }}\n                    endIcon={<SendSharpIcon />}\n                  >\n                    Append\n                  </Button>\n                </Grid>\n                <Grid item xs={12}>\n                  <Button\n                    variant=\"outlined\"\n                    size=\"large\"\n                    color=\"primary\"\n                    onClick={this.reverse}\n                    style={{ width: \"100%\", marginBottom: \"10px\" }}\n                    endIcon={<SwapHorizontalCircleSharpIcon />}\n                  >\n                    Reverse LL\n                  </Button>\n                </Grid>\n              </Grid>\n              <br />\n              <br />\n              <Divider />\n              <Typography variant=\"h6\" display=\"block\" gutterBottom>\n                NOTE:\n              </Typography>\n              <Grid container>\n                <Grid item xs={12}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    On Hover of Nodes below mentioned options will be available.\n                  </Typography>\n                </Grid>\n                <Grid item xs={2}>\n                  <DeleteIcon style={{ color: redColor }} />\n                </Grid>\n                <Grid item xs={10}>\n                  <Typography variant=\"subtitle2\">\n                    Delete data (First occurrence)\n                  </Typography>\n                </Grid>\n                <Grid item xs={2}>\n                  <DeleteForeverIcon style={{ color: redColor }} />\n                </Grid>\n                <Grid item xs={10}>\n                  <Typography variant=\"subtitle2\">\n                    Delete all occurrence of data\n                  </Typography>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n          <div className=\"linked-list-view\">\n            {this.state.printList.map((list, index) => {\n              //this.state.printList.length - 1\n              return this.printLL(list, 0 == index, index);\n            })}\n          </div>\n        </div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\",\n          }}\n          open={this.state.snackOpen}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          message={this.state.errorMessage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SingleLinkedList;\n","import React, { useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function Home(props) {\n  useEffect(() => {\n    props.setHeader(\"Home\");\n  });\n  return (\n    <div>\n      <Typography align=\"center\" variant=\"h4\">\n        Welcome to Data Structures\n      </Typography>\n      <br />\n      <Typography align=\"center\" variant=\"subtitle1\" gutterBottom>\n        Better viewed in <strong>Desktop / Tab</strong>.\n      </Typography>\n      <Typography align=\"center\" variant=\"subtitle1\" gutterBottom>\n        <strong> Mobile version </strong> will come soon.\n      </Typography>\n    </div>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport SingleLinkedList from \"../LinkedList/SingleLinkedList\";\nimport Home from \"../Home\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nconst menuList = [\n  {\n    name: \"Home\",\n    link: \"/\",\n  },\n  {\n    name: \"Linked List\",\n    link: \"/linked-list\",\n  },\n];\n\nexport default function AppMenu() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [titleHeader, setTitleHeader] = React.useState(\"Data Structure\");\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const setHeader = (data = \"Data Structure\") => {\n    setTitleHeader(data);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Router>\n        <AppBar\n          position=\"fixed\"\n          className={clsx(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              {titleHeader}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={handleDrawerClose}>\n              {theme.direction === \"ltr\" ? (\n                <ChevronLeftIcon />\n              ) : (\n                <ChevronRightIcon />\n              )}\n            </IconButton>\n          </div>\n          <Divider />\n          <List>\n            {menuList.map((item, index) => (\n              <ListItem button key={item.name}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <Link to={item.link}>\n                  <ListItemText primary={item.name} />\n                </Link>\n              </ListItem>\n            ))}\n          </List>\n          {/* <Divider />\n          <List>\n            {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List> */}\n        </Drawer>\n        <main\n          className={clsx(classes.content, {\n            [classes.contentShift]: open,\n          })}\n        >\n          <div className={classes.drawerHeader} />\n          <Switch>\n            <Route exact path=\"/linked-list\">\n              <SingleLinkedList setHeader={setHeader} />\n            </Route>\n            <Route path=\"/\">\n              <Home setHeader={setHeader} />\n            </Route>\n          </Switch>\n        </main>\n      </Router>\n    </div>\n  );\n}\n","import React from \"react\";\nimport AppMenu from \"./AppMenu/AppMenu\";\n\nfunction App() {\n  return <AppMenu></AppMenu>;\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}